内容
·理解对象属性
·理解并创建对象
·理解继承

  面向对象的语言有一个标志，那就是它们都有雷德概念，而通过类可以创建任意多个具有相同属性和方法的对象。前面提到过，ECMAScript中没有类的概念，因此它的对象
也基于类的语言中的对象有所不同。
  3.1理解对象
  3.1.1属性类型
  3.1.2定义多个属性
  3.1.3读取属性的特性
  3.2创建对象
  3.2.1工厂模式
  3.2.2构造函数模式
  3.2.3原型模式
  3.2.4组合使用构造函数模式和原型模式
  3.2.5动态原型模式
  3.2.6寄生构造函数模式
  3.2.7稳妥构造函数模式
  3.3继承
    继承是OO语言中的一个最为人津津乐道的概念。许多OO语言都支持两种继承方式：接口继承和实现继承。接口继承只继承方法签名，而实现继承则继承实际的方法。如前
  所述，由于函数没有签名，在ECMAScript中无法实现接口继承。ECMAScript只支持实现继承，而且其实现继承主要是依靠原型链来实现的。
  3.3.1原型链
    基本思想：是利用原型让一个引用类型继承另一个引用类型的属性和方法。
    构造函数、原型和实例的关系：每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都抱哈一个指向原型对象的内部指针。
  3.3.2借用构造函数
  3.3.3组合继承
  3.3.4原型式继承
  3.3.5寄生式继承
  3.3.6寄生组合式继承
  3.4小结
